- name: install keystore for ssl
  ansible.builtin.copy:
    src: apacheds.jks
    dest: /opt/apacheds.jks
- name: copy ldif
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /opt
  with_fileglob:
    - '*.ldif'
- name: install apacheds
  ansible.builtin.shell: curl https://dlcdn.apache.org//directory/apacheds/dist/{{ APACHEDS_VERSION }}/apacheds-{{ APACHEDS_VERSION }}.tar.gz | tar -xvz -C /opt && \
    ln -s /opt/apacheds-{{ APACHEDS_VERSION }} /opt/apacheds
- name: start apacheds
  ansible.builtin.shell: /opt/apacheds/bin/apacheds.sh default start
- name: check apacheds ready
  ansible.builtin.shell: ldapsearch  -H ldap://localhost:10389 -x  -b dc=example,dc=com '(&(objectClass=domain))'
  register: check_apacheds
  until: check_apacheds is not failed
  retries: 10
  delay: 3
- name: initialize apacheds with preconfigured settings
  ansible.builtin.shell: |
    ldapdelete -H ldap://localhost:10389 -w secret -D "uid=admin,ou=system" -r dc=example,dc=com && \
    ldapdelete -H ldap://localhost:10389 -w secret -D "uid=admin,ou=system" -r ads-directoryServiceId=default,ou=config && \
    ldapmodify -H ldap://localhost:10389 -D "uid=admin,ou=system" -w secret -a -f /opt/example-com-backup-sorted.ldif && \
    ldapmodify -H ldap://localhost:10389 -D "uid=admin,ou=system" -w secret -a -f /opt/default-instance-backup-sorted.ldif
- name: restart apacheds
  ansible.builtin.shell: /opt/apacheds/bin/apacheds.sh default stop; /opt/apacheds/bin/apacheds.sh default start

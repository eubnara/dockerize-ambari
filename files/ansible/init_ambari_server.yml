---
- name: Initialize ambari server
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - name: install necessary or useful packages
      ansible.builtin.yum:
        name:
          - java-1.8.0-openjdk-devel.x86_64
          - curl
          - less
          - vim
        state: present
    - name: install rpms for ambari server
      ansible.builtin.yum:
        name:
          - /root/rpm/ambari-agent-2.7.6.0-0.x86_64.rpm
          - /root/rpm/ambari-server-2.7.6.0-0.x86_64.rpm
          - /root/rpm/bigtop-ambari-mpack-2.7.6.0-0.el7.noarch.rpm
          - /root/rpm/bigtop-groovy-2.5.4-1.el7.noarch.rpm
          - /root/rpm/bigtop-jsvc-1.2.4-1.el7.x86_64.rpm
          - /root/rpm/bigtop-utils-3.2.0-1.el7.noarch.rpm
          - /root/rpm/mysql80-community-release-el7-6.noarch.rpm
        state: present
    - name: import gpg key for mysql
      ansible.builtin.shell:
        cmd: rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
    - name: install mysql-community-client
      ansible.builtin.yum:
        name:
          - mysql-community-client
    - name: create link to mysql 8.x connector java
      ansible.builtin.file:
        src: /root/lib/mysql-connector-java-8.0.30.jar
        # /usr/share/java/mysql-connector-java.jar 라는 이름을 쓰지 않으면, server.jdbc.driver.path 설정도 필요하다.
        dest: /usr/share/java/mysql-connector-java.jar
        state: link
    - name: setup jdbc for ambari
      ansible.builtin.shell:
        cmd: ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar
    - name: add java.home to ambari.properties
      ansible.builtin.lineinfile:
        path: /etc/ambari-server/conf/ambari.properties
        search_string: 'java.home'
        line: java.home=/usr/lib/jvm/java-1.8.0-openjdk
    - name: setup db for ambari
      ansible.builtin.shell:
        cmd: ambari-server setup --silent --database=mysql --databasehost=dockerize-ambari-db-1 --databaseport=3306  --databasename=ambari --databaseusername=ambari --databasepassword=ambari
    - name: change jdbc driver in ambari.properties (to support mysql 8.x)
      ansible.builtin.replace:
        path: /etc/ambari-server/conf/ambari.properties
        regexp: '^(.*)=com\.mysql\.jdbc\.Driver'
        replace: \g<1>=com.mysql.cj.jdbc.Driver
    - name: check mpack
      ansible.builtin.shell: ls /var/lib/ambari-server/resources/stacks/BGTP
      register: mpack
      ignore_errors: yes
    - name: install mpack
      ansible.builtin.shell:
        cmd: ambari-server install-mpack --mpack=/usr/lib/bigtop-ambari-mpack/bgtp-ambari-mpack-1.0.0.0-SNAPSHOT-bgtp-ambari-mpack.tar.gz --verbose
      when: mpack.rc != 0
    - name: check jce unlimited policy files
      ansible.builtin.stat:
        path: /usr/lib/jvm/java-1.8.0/jre/lib/security/policy/unlimited
      register: jce_files
    - name: Fail when jce unlimited policy files not exist
      ansible.builtin.fail:
        msg: There is no JCE unlimited strength policy files
      when: jce_files.stat.exists == false
    - name: set crypto.policy unlimited
      ansible.builtin.lineinfile:
        path: /usr/lib/jvm/java-1.8.0/jre/lib/security/java.security
        regexp: '^crypto\.policy='
        line: crypto.policy=unlimited
    - name: remove hortonworks
      ansible.builtin.replace:
        path: /etc/ambari-server/conf/ambari.properties
        regexp: '^(.*)hortonworks(.*)$'
        replace: \g<1>example\g<2>
